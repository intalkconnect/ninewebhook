version: "3.9"

services:
  webhook:
    image: node:20-alpine
    container_name: channels-webhook
    working_dir: /app
    environment:
      NODE_ENV: production
      PORT: 3000

      # --- Postgres ---
      PGHOST: postgres
      PGPORT: "5432"
      PGDATABASE: postgres
      PGUSER: postgres
      PGPASSWORD: "Alice*321"


      # --- RabbitMQ ---
      DEFAULT_AMQP_URL: amqp://guest:guest@rabbit:5672/
      FALLBACK_QUEUE: hmg.incoming
      QUEUE_TEMPLATE: "%s.incoming"


      # --- Meta/Telegram (opcionais) ---
      META_APP_SECRET: "5daeaff8d0447f7469f854b6082bb2d1"
      META_VERIFY_TOKEN: "meta_verify_82a7f6c9ba"
      TELEGRAM_SECRET: ""
      TELEGRAM_ENDPOINT_ID: "8264496732:AAHNXxzWeLIfYk7nAPFWGVteQLRb9i5yGlc"
      TELEGRAM_TOKEN: "8264496732:AAHNXxzWeLIfYk7nAPFWGVteQLRb9i5yGlc"
      WHATSAPP_TOKEN: "EAAJu9LjBChkBOZCEiOebcVRuIxATcMUWCmeMPWTZCCWNuJe4QeddvjAXkXpIHntuZClq7yNxQ0hER2ptQ9HaZCYpZB1gnHzETSe4bnrHzZACAD5MPIwzkAIMyTfkuRE2CnqLgwZBTl3a20g3MHLH51SeeZC6K8UUqZBg2tsKvCQmV8PMuVFjjZAiJWGOnxzFmk8QZDZD"


    command: >
      sh -lc '
        set -e;
        apk add --no-cache git wget;
        cd /; rm -rf /app && mkdir -p /app;
        git clone --depth=1 https://github.com/intalkconnect/testelab.git /app;
        cd /app;
        if [ -f package-lock.json ]; then
          npm ci --omit=dev;
        else
          npm install --omit=dev --no-audit --no-fund --legacy-peer-deps || true;
          node -e "for (const m of [\"fastify\",\"fastify-raw-body\",\"amqplib\",\"pg\",\"ioredis\"]) { try { require.resolve(m) } catch { process.exitCode = 1 } }";
          if [ "$?" != "0" ]; then
            npm install fastify fastify-raw-body amqplib pg ioredis --no-audit --no-fund --legacy-peer-deps;
          fi
        fi;
        node server.js
      '

    ports:
      - "3000:3000"

    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

    networks:
      - nginx-proxy-manager_default
      - public_network

    restart: unless-stopped

networks:
  nginx-proxy-manager_default:
    external: true
    name: nginx-proxy-manager_default
  public_network:
    external: true
    name: public_network

volumes:
  redis_data:
  rabbitmq_data:
  postgres_data:
